rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to validate user ownership
    function isUserOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // User Profile Rules
    match /users/{userId} {
      // Users can only create, read, update their own profile
      allow create, read, update: if isUserOwner(userId);
      
      // Users can only delete their own profile
      allow delete: if isUserOwner(userId);

      // Validate user profile structure
      allow write: if request.resource.data.keys().hasAll([
        'email', 
        'displayName', 
        'preferredCategories', 
        'createdAt'
      ]) &&
      request.resource.data.email is string &&
      request.resource.data.displayName is string &&
      request.resource.data.preferredCategories is list;
    }

    // Newsletter Rules
    match /newsletters/{newsletterId} {
      // Public read access for newsletters
      allow read: if true;

      // Only admin can write newsletters
      allow create, update, delete: if isAuthenticated() && 
        request.auth.token.admin == true;

      // Validate newsletter structure
      allow write: if request.resource.data.keys().hasAll([
        'title', 
        'description', 
        'author', 
        'websiteUrl', 
        'categories'
      ]) &&
      request.resource.data.title is string &&
      request.resource.data.description is string &&
      request.resource.data.categories is list;
    }

    // User Preferences Rules
    match /userPreferences/{userId} {
      // Users can only manage their own preferences
      allow create, read, update: if isUserOwner(userId);
      allow delete: if isUserOwner(userId);

      // Validate preferences structure
      allow write: if request.resource.data.keys().hasAll([
        'userId', 
        'preferredCategories', 
        'readingFrequency'
      ]) &&
      request.resource.data.userId == userId &&
      request.resource.data.preferredCategories is list &&
      request.resource.data.readingFrequency is string;
    }

    // User Interactions Rules
    match /userInteractions/{interactionId} {
      // Only authenticated users can log interactions
      allow create: if isAuthenticated();

      // Users can only read their own interactions
      allow read: if isAuthenticated() && 
        request.auth.uid == resource.data.userId;

      // Validate interaction structure
      allow write: if request.resource.data.keys().hasAll([
        'newsletterId', 
        'userId', 
        'interactionType', 
        'timestamp'
      ]) &&
      request.resource.data.userId == request.auth.uid &&
      request.resource.data.interactionType in ['view', 'subscribe', 'unsubscribe', 'read'];
    }
  }
}
